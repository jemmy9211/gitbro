#!/bin/bash

command_exists() {
    command -v "$1" &> /dev/null
}

SCRIPT_PATH=$(realpath "$0")
PROJECT_ROOT=$(dirname $(dirname "$SCRIPT_PATH"))
VENV_PATH="$PROJECT_ROOT/venv"

# echo "DEBUG: PROJECT_ROOT=$PROJECT_ROOT"
# echo "DEBUG: VENV_PATH=$VENV_PATH"

if [ ! -d "$VENV_PATH" ]; then
    echo "Virtual environment not found at $VENV_PATH. Please run ./install.sh from the project root."
    exit 1
fi

source "$VENV_PATH/bin/activate"

if ! command_exists python3; then
    echo "Python3 not found in the virtual environment. Please ensure the setup is correct."
    deactivate
    exit 1
fi

# echo "DEBUG: Virtual environment activated, running generate_message.py..."
# Initial message generation removed as per request

# Modify the choice loop
while true; do
    temp_stderr_file=$(mktemp)
    # Capture stdout in commit_message, and stderr in temp_stderr_file
    commit_message=$(python3 "$PROJECT_ROOT/src/generate_message.py" 2> "$temp_stderr_file")
    exit_code=$?

    if [ $exit_code -ne 0 ]; then
        echo -e "\nError details from message generation script (stderr):"
        cat "$temp_stderr_file"
        # The existing combined check will handle the generic message and exit
    fi
    rm -f "$temp_stderr_file" # Clean up the temp file

    if [ $exit_code -ne 0 ] || [ -z "$commit_message" ]; then
        echo "Failed to generate a commit message. Common issues:"
        echo "- Ensure Ollama is running and accessible at http://localhost:11434."
        echo "- Check that changes are staged using 'git add'."
        echo "- Review any specific error messages printed above from the generation script."
        deactivate
        exit 1
    fi

    echo -e "\nGenerated commit message:\n$commit_message"
    echo -e "\nPlease choose an action:"
    echo "1) Accept and commit"
    echo "2) Regenerate with more creativity"
    echo "3) Cancel and exit"
    read -p "Enter your choice (1-3): " choice

    case $choice in
        1)
            git commit -m "$commit_message"
            commit_exit_code=$?
            if [ $commit_exit_code -eq 0 ]; then
                echo "Commit successful! Commit message: \"$commit_message\""
                # Reset creativity level for next time
                PYTHONPATH="$PROJECT_ROOT/src" python3 -c "from generate_message import reset_creativity; reset_creativity()"
                break
            else
                echo "Error: Git commit command failed. Please check for issues like an empty commit message (if the generation failed silently), Git hooks preventing the commit, or other Git-related problems."
                # Reset creativity level for next time, even on failure, to ensure clean state for next attempt
                PYTHONPATH="$PROJECT_ROOT/src" python3 -c "from generate_message import reset_creativity; reset_creativity()"
                deactivate
                exit 1 # Exit with an error code
            fi
            ;;
        2)
            echo "Regenerating commit message with increased creativity..."
            PYTHONPATH="$PROJECT_ROOT/src" python3 -c "from generate_message import increase_creativity; increase_creativity()"
            continue
            ;;
        3)
            echo "Operation canceled."
            # Reset creativity level for next time
            PYTHONPATH="$PROJECT_ROOT/src" python3 -c "from generate_message import reset_creativity; reset_creativity()"
            break
            ;;
        *)
            echo "Invalid option, please try again."
            continue
            ;;
    esac
done

deactivate